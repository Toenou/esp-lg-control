substitutions:
  device_name: esp-wp-control

esphome:
  name: "${device_name}"
  includes:
    - lg_heatpump_functions.h
  on_boot:
    priority: 200
    then:
      lambda: !lambda |-
          //instant on (in case of controller restart during run)
          if(id(thermostat_signal).state) {
            id(relay_pump).turn_on();
            id(relay_heat).turn_on();
          } else {
            id(relay_pump).turn_off();
            id(relay_heat).turn_off();
          }
          
packages:
  config_values: !include config/config.yaml
  lg_modbus: !include lg_heatpump_modbus.yaml

# Enable logging. Disable modbus controller debug messages
logger:
  logs:
    modbus_controller.sensor: WARN
    modbus_controller.output: WARN
    modbus.number: WARN
    esp32.preferences: WARN
    sensor: WARN
    text_sensor: WARN
    dallas.sensor: WARN
    number: WARN

globals:
  - id: stooklijn_target
    type: float
    restore_value: no
    initial_value: '30'
  - id: working_mode
    type: int
    restore_value: no
    initial_value: '0'
  - id: update_stooklijn
    type: bool
    restore_value: no
    initial_value: 'true'

number:
  - platform: template
    name: "Stooklijn offset"
    id: wp_stooklijn_offset
    min_value: -5
    max_value: 5
    initial_value: 0
    step: 1
    restore_value: yes
    unit_of_measurement: "°C"
    optimistic: true
    set_action:
      then:
        lambda: !lambda |-
            id(update_stooklijn) = true;
  - platform: template
    id: stooklijn_min_oat
    name: "Stooklijn Minimum Buitentemperatuur"
    min_value: -25
    max_value: 0
    step: 1
    restore_value: yes
    initial_value: -15
    unit_of_measurement: "°C"
    optimistic: true
    set_action:
      then:
        lambda: !lambda |-
            id(update_stooklijn) = true;
  - platform: template
    id: stooklijn_max_wtemp
    name: "Stooklijn Maximum Watertemperatuur"
    min_value: 20
    max_value: 60
    step: 1
    restore_value: yes
    initial_value: 45
    unit_of_measurement: "°C"
    optimistic: true
    set_action:
      then:
        lambda: !lambda |-
            id(update_stooklijn) = true;
  - platform: template
    id: stooklijn_min_wtemp
    name: "Stooklijn Minimum Watertemperatuur"
    min_value: 20
    max_value: 40
    step: 1
    restore_value: yes
    initial_value: 25
    unit_of_measurement: "°C"
    optimistic: true
    set_action:
      then:
        lambda: !lambda |-
            id(update_stooklijn) = true;
  - platform: template
    id: stooklijn_start_temp
    name: "Stooklijn Start Buitentemperatuur"
    min_value: 0
    max_value: 20
    step: 1
    restore_value: yes
    initial_value: 12
    unit_of_measurement: "°C"
    optimistic: true
    set_action:
      then:
        lambda: !lambda |-
            id(update_stooklijn) = true;
  - platform: template
    id: minimum_run_time
    name: "Minimale run tijd"
    min_value: 0
    max_value: 60
    step: 1
    restore_value: yes
    initial_value: 30
    unit_of_measurement: "min"
    optimistic: true
  - platform: template
    id: external_pump_runover
    name: "External pump overrun"
    min_value: 0
    max_value: 60
    step: 1
    restore_value: yes
    initial_value: 10
    unit_of_measurement: "min"
    optimistic: true
  - platform: template
    id: oat_silent_always_off
    name: "Buitentemperatuur silent always off"
    min_value: -20
    max_value: 10
    step: 1
    restore_value: yes
    initial_value: -10
    unit_of_measurement: "°C"
    optimistic: true
  - platform: template
    id: thermostat_off_delay
    name: "thermostat off delay"
    min_value: 0
    max_value: 10
    step: 1
    restore_value: yes
    initial_value: 1
    unit_of_measurement: "min"
    optimistic: true
  - platform: template
    id: thermostat_on_delay
    name: "thermostat on delay"
    min_value: 0
    max_value: 10
    step: 1
    restore_value: yes
    initial_value: 0
    unit_of_measurement: "min"
    optimistic: true

switch:
  - platform: gpio
    name: "WP External Pump"
    pin: 18
    id: relay_pump
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "WP Heat"
    pin: 19
    id: relay_heat
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: restart
    name: "ESP WP Control Restart"

interval:
  - interval: 30s
    id: state_machine
    then: !include { file: lg_heatpump_state_machine.yaml }

dallas:
  - pin: 32

binary_sensor:
  - platform: gpio # Thermostat input signal is connected to this input pin
    pin:
      number: GPIO27
      mode:
        input: true
        pullup: false
    name: "WP Nest Signal"
    id: thermostat_signal
    filters:
      - delayed_on: 500ms # Debounce
    
sensor:
  - platform: dallas
    address: 0x4a0122113a9bd528
    name: "WPB Bottom Temperature"
  - platform: dallas
    address: 0xb9012211506ebf28
    name: "WPB Top Temperature"
  - platform: dallas
    address: 0xe101221102a46b28
    name: "Buffer Top Temperature"
  - platform: dallas
    address: 0xd7000801c04e3210
    name: "Buffer Bottom Temperature"
  - platform: dallas
    address: 0xd10122112fc5ee28
    name: "Inlet Junction Temperature"
  - platform: dallas
    address: 0x2403069794065c28
    name: "Outlet Junction Temperature"
  - platform: dallas
    address: 0xbb03059497154628
    name: "SWW Outlet Temperature"
  - platform: template
    name: "Stooklijn Watertemp Target"
    id: watertemp_target
    unit_of_measurement: "°C"
    update_interval: never
  - platform: wifi_signal
    name: "${device_name} WiFi Signal"
    update_interval: 120s
    accuracy_decimals: 0
  - platform: uptime
    name: "${device_name} Uptime"
    unit_of_measurement: days
    update_interval: 3600s
    accuracy_decimals: 1
    filters:
      - multiply: 0.000011574
  - platform: template
    name: "Delta T"
    id: wp_delta_t
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    lambda: |-
      return (float)(id(water_temp_aanvoer).state-id(water_temp_retour).state); 
    update_interval: 60s
  - platform: template
    name: "Derivative"
    id: derivative_value
    accuracy_decimals: 1
    unit_of_measurement: "°C/h" 
    update_interval: never  
# Sensors for ESP version and WIFI information
text_sensor:
  - platform: version
    name: "${device_name} ESPHome Version"
  - platform: wifi_info
    ip_address:
      name: "${device_name} ip"
    ssid:
      name: "${device_name} ssid"
  - platform: template
    name: "Controller state"
    id: controller_state
    update_interval: never